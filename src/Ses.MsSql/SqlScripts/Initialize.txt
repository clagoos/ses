CREATE TABLE [Streams] (
    [StreamId] uniqueidentifier NOT NULL,
    [Version] int NOT NULL,
    [CommitId] uniqueidentifier NOT NULL,
    [ContractName] nvarchar(225) NOT NULL,
    [CreatedAtUtc] datetime NOT NULL,
    [Payload] varbinary(max) NOT NULL,
    [EventId] BIGINT NULL
    CONSTRAINT [PK_Streams] PRIMARY KEY CLUSTERED ([StreamId],[Version],[CommitId])
);

CREATE NONCLUSTERED INDEX IX_Streams_EventId ON [dbo].[Streams] ([EventId])
INCLUDE ([StreamId],[Version],[CommitId],[ContractName],[Payload],[CreatedAtUtc]);

CREATE TABLE [StreamsMetadata] (
    [StreamId] uniqueidentifier NOT NULL,
    [CommitId] uniqueidentifier NOT NULL,
    [Payload] varbinary(max) NOT NULL,
    CONSTRAINT [PK_StreamsMetadata] PRIMARY KEY CLUSTERED ([StreamId],[CommitId])
);

CREATE TABLE [StreamsSnapshots] (
    [StreamId] uniqueidentifier NOT NULL,
    [Version] int NOT NULL,
    [LastStreamVersion] int NOT NULL,
    [ContractName] nvarchar(225) NOT NULL,
    [GeneratedAtUtc] datetime NOT NULL,
    [Payload] varbinary(max) NOT NULL,
    CONSTRAINT [PK_StreamsSnapshots] PRIMARY KEY CLUSTERED ([StreamId],[Version])
);
GO

CREATE PROCEDURE [dbo].[SesSelectEvents]
(
    @StreamId UNIQUEIDENTIFIER,
    @FromVersion INT,
    @PessimisticLock BIT
)
AS
BEGIN
    SET NOCOUNT ON;
    IF(@PessimisticLock = 1) BEGIN
        DECLARE @LockedStreamId uniqueidentifier
        SELECT TOP 1 @LockedStreamId = [StreamId] FROM [Streams] WITH (UPDLOCK,ROWLOCK) WHERE [StreamId] = @StreamId AND [Version] = 0
        IF @LockedStreamId IS NULL BEGIN
            RAISERROR('StreamIsNotLockable', 16, 1);
            RETURN;
        END
    END

    DECLARE @SPayload VARBINARY(MAX), @SContractName NVARCHAR(255), @SVersion int
    SELECT @SContractName=[ContractName],@SVersion=[Version],@SPayload=[Payload] FROM [StreamsSnapshots] WITH(READPAST,ROWLOCK) WHERE [StreamId]=@StreamId AND [Version]>0
    SELECT @SContractName, @SVersion, @SPayload
    IF @SVersion IS NOT NULL BEGIN
        SET @FromVersion = @SVersion + 1
    END

    SELECT [ContractName],[Version],[Payload] FROM [Streams] WITH(READPAST,ROWLOCK) WHERE [StreamId]=@StreamId AND [Version]>=@FromVersion ORDER BY [Version] ASC
END;
GO

CREATE PROCEDURE [dbo].[SesInsertEventsNoStream]
(
    @StreamId UNIQUEIDENTIFIER,
    @CommitId UNIQUEIDENTIFIER,
    @CreatedAtUtc DATETIME,
    @MetadataPayload VARBINARY(MAX),
    @IsLockable BIT,
    @EventContractName NVARCHAR(250),
    @EventVersion INT,
    @EventPayload VARBINARY(MAX)
)
AS
BEGIN
    SET NOCOUNT ON;

    IF @EventVersion = 1 AND (SELECT COUNT(1) FROM [Streams] WHERE [StreamId] = @StreamId) > 0 BEGIN
        RAISERROR('WrongExpectedVersion', 16, 1);
        RETURN;
    END

    IF @EventVersion = 1 BEGIN
        INSERT INTO [StreamsSnapshots]([StreamId],[Version],[LastStreamVersion],[ContractName],[GeneratedAtUtc],[Payload])
        VALUES(@StreamId,0,0,'Init',@CreatedAtUtc,0);

        IF @IsLockable = 1 BEGIN
            INSERT INTO [Streams]([StreamId],[CommitId],[Version],[ContractName],[Payload],[CreatedAtUtc])
            VALUES(@StreamId,@CommitId,0,'Lockable',0,@CreatedAtUtc);
        END
    END

    INSERT INTO [Streams]([StreamId],[CommitId],[Version],[ContractName],[Payload],[CreatedAtUtc])
    VALUES(@StreamId,@CommitId,@EventVersion,@EventContractName,@EventPayload,@CreatedAtUtc);

    IF(@MetadataPayload IS NOT NULL AND LEN(@MetadataPayload) > 0) BEGIN
        INSERT INTO [StreamsMetadata]([StreamId],[CommitId],[Payload])
        VALUES(@StreamId,@CommitId,@MetadataPayload);
    END
END;
GO

CREATE PROCEDURE [dbo].[SesInsertEventsAny]
(
    @StreamId UNIQUEIDENTIFIER,
    @CommitId UNIQUEIDENTIFIER,
    @CreatedAtUtc DATETIME,
    @MetadataPayload VARBINARY(MAX),
    @IsLockable BIT,
    @EventContractName NVARCHAR(250),
    @EventVersion INT,
    @EventPayload VARBINARY(MAX)
)
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @IsNew BIT = 0
    IF (SELECT COUNT(1) FROM [Streams] WHERE [StreamId] = @StreamId) > 0 BEGIN
        SET @IsNew = 1
    END

    IF(@IsNew = 1 AND @IsLockable = 1) BEGIN
        INSERT INTO [Streams]([StreamId],[CommitId],[Version],[ContractName],[CreatedAtUtc],[Payload])
        VALUES(@StreamId,@CommitId,0,'Lockable',@CreatedAtUtc,0);
    END

    INSERT INTO [Streams]([StreamId],[CommitId],[Version],[ContractName],[Payload],[CreatedAtUtc])
    VALUES(@StreamId,@CommitId,@EventVersion,@EventContractName,@EventPayload,@CreatedAtUtc);

    IF(@MetadataPayload IS NOT NULL AND LEN(@MetadataPayload) > 0) BEGIN
        INSERT INTO [StreamsMetadata]([StreamId],[CommitId],[Payload])
        VALUES(@StreamId,@CommitId,@MetadataPayload);
    END

    IF(@IsNew = 1 AND @IsLockable = 1) BEGIN
        INSERT INTO [StreamsSnapshots]([StreamId],[Version],[LastStreamVersion],[ContractName],[GeneratedAtUtc],[Payload])
        VALUES(@StreamId,0,0,'Init',@CreatedAtUtc,0);
    END
END;
GO

CREATE PROCEDURE [dbo].[SesInsertEventsExpectedVersion]
(
    @StreamId UNIQUEIDENTIFIER,
    @CommitId UNIQUEIDENTIFIER,
    @CreatedAtUtc DATETIME,
    @MetadataPayload VARBINARY(MAX),
    @ExpectedVersion INT,
    @EventContractName NVARCHAR(250),
    @EventVersion INT,
    @EventPayload VARBINARY(MAX)
)
AS
BEGIN
    SET NOCOUNT ON;
    IF(SELECT TOP 1 1 FROM [Streams] WHERE [StreamId] = @StreamId AND (SELECT TOP 1 [Version] FROM [Streams] WHERE [StreamId] = @StreamId ORDER BY [Version] DESC) = @ExpectedVersion) <> 1 BEGIN
        RAISERROR('WrongExpectedVersion', 16, 1);
        RETURN;
    END

    INSERT INTO [Streams]([StreamId],[CommitId],[Version],[ContractName],[Payload],[CreatedAtUtc])
    VALUES(@StreamId,@CommitId,@EventVersion,@EventContractName,@EventPayload,@CreatedAtUtc);

    IF(@MetadataPayload IS NOT NULL AND LEN(@MetadataPayload) > 0) BEGIN
        INSERT INTO [StreamsMetadata]([StreamId],[CommitId],[Payload])
        VALUES(@StreamId,@CommitId,@MetadataPayload);
    END
END;
GO